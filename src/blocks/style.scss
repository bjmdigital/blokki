$blokki-padding-small: var(--blokki-has-padding-small , 1rem);
$blokki-padding-medium: var(--blokki-has-padding-medium, 2rem);
$blokki-padding-large: var(--blokki-has-padding-large, 3rem);

$blokki-margin-small: var(--blokki-has-margin-small, 1rem);
$blokki-margin-medium: var(--blokki-has-margin-medium, 2rem);
$blokki-margin-large: var(--blokki-has-margin-large, 3rem);

$blokki-breakpoints: (
        small: 0,
        medium: 768px,
        large: 1080px,
);

$blokki-padding-map: (
        small: $blokki-padding-small,
        medium: $blokki-padding-medium,
        large: $blokki-padding-large,
);

$blokki-margin-map: (
        small: $blokki-margin-small,
        medium: $blokki-margin-medium,
        large: $blokki-margin-large,
);


$blokki-block-border-editor: var(--blokki-grid-editor-border-width, 1px) var(--blokki-grid-editor-border-style, dotted) var(--blokki-grid-editor-border-color, #D7D7D7);

@mixin blokki-medium-up {
  @media screen and (min-width: #{map-get($blokki-breakpoints, medium)}) {
    @content;
  }
}

@mixin blokki-large-up {
  @media screen and (min-width: #{map-get($blokki-breakpoints, large)}) {
    @content;
  }
}

@mixin blokki-xlarge-up {
  @media screen and (min-width: #{map-get($blokki-breakpoints, xlarge)}) {
    @content;
  }
}


@mixin blokkiVisibilityRules {

  @media (min-width: #{map-get($blokki-breakpoints, large)}) {
    .blokki-hidden-large {
      display: none;
    }
  }

  @media (min-width: #{map-get($blokki-breakpoints, medium)}) and (max-width: calc(#{map-get($blokki-breakpoints, large)} - 1px)) {
    .blokki-hidden-medium {
      display: none;
    }
  }


  @media (max-width: calc(#{map-get($blokki-breakpoints, medium)} - 1px)) {
    .blokki-hidden-small {
      display: none;
    }
  }


}

@mixin blokkiPaddingRules {

  $padding-direction: 'all', 'top', 'bottom', 'left', 'right';

  @each $direction in $padding-direction {
    @each $padding-size, $padding-value in $blokki-padding-map {
      @if $direction == all {
        .has-padding-#{$direction}-#{$padding-size} {
          padding: $padding-value;
        }

      } @else {
        .has-padding-#{$direction}-#{$padding-size} {
          padding-#{$direction} : $padding-value;
        }
      }
    }
  }

}

@mixin blokkiMarginRules {

  $margin-direction: 'all', 'top', 'bottom', 'left', 'right';

  @each $direction in $margin-direction {
    @each $size, $value in $blokki-margin-map {
      @if $direction == all {
        .has-margin-#{$direction}-#{$size} {
          margin: $value;
        }
      } @else {
        .has-margin-#{$direction}-#{$size} {
          margin-#{$direction} : $value;
        }
      }
    }
  }

}


@mixin blokkiGridColumns {
  $columns: 1, 2, 3, 4, 5, 6;

  @each $breakpoint, $breakpoint-value in $blokki-breakpoints {
    @each $column in $columns {
      @media screen and (min-width: #{$breakpoint-value}) {
        &.#{$breakpoint}-up-#{$column} {
          grid-template-columns: repeat(#{$column}, 1fr);
        }
      }
    }
  }
}

.blokki-grid {
  &:not(.grid-x) {
    display: grid;
    grid-row-gap: var(--blokki-grid-row-gap, 20px);
    grid-column-gap: var(--blokki-grid-column-gap, 20px);

    @include blokkiGridColumns;
  }
}

.blokki-align {
  &-start {
    align-items: start;
  }
  &-center {
    align-items: center;
  }
  &-end {
    align-items: end;
  }
}


.modal {
  font-family: -apple-system,BlinkMacSystemFont,avenir next,avenir,helvetica neue,helvetica,ubuntu,roboto,noto,segoe ui,arial,sans-serif;
}

.modal__overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0,0,0,0.6);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 999;
}

.modal__container {
  background-color: #fff;
  padding: 30px;
  max-width: 500px;
  max-height: 100vh;
  border-radius: 4px;
  overflow-y: auto;
  box-sizing: border-box;
}

.modal__header {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.modal__title {
  margin-top: 0;
  margin-bottom: 0;
  font-weight: 600;
  font-size: 1.25rem;
  line-height: 1.25;
  color: #00449e;
  box-sizing: border-box;
}

.modal__close {
  background: transparent;
  border: 0;
}

.modal__header .modal__close:before { content: "\2715"; }

.modal__content {
  margin-top: 2rem;
  margin-bottom: 2rem;
  line-height: 1.5;
  color: rgba(0,0,0,.8);
}

.modal__btn {
  font-size: .875rem;
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: .5rem;
  padding-bottom: .5rem;
  background-color: #e6e6e6;
  color: rgba(0,0,0,.8);
  border-radius: .25rem;
  border-style: none;
  border-width: 0;
  cursor: pointer;
  -webkit-appearance: button;
  text-transform: none;
  overflow: visible;
  line-height: 1.15;
  margin: 0;
  will-change: transform;
  -moz-osx-font-smoothing: grayscale;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  -webkit-transform: translateZ(0);
  transform: translateZ(0);
  transition: -webkit-transform .25s ease-out;
  transition: transform .25s ease-out;
  transition: transform .25s ease-out,-webkit-transform .25s ease-out;
}

.modal__btn:focus, .modal__btn:hover {
  -webkit-transform: scale(1.05);
  transform: scale(1.05);
}

.modal__btn-primary {
  background-color: #00449e;
  color: #fff;
}



/**************************\
  Demo Animation Style
\**************************/
@keyframes mmfadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes mmfadeOut {
  from { opacity: 1; }
  to { opacity: 0; }
}

@keyframes mmslideIn {
  from { transform: translateY(15%); }
  to { transform: translateY(0); }
}

@keyframes mmslideOut {
  from { transform: translateY(0); }
  to { transform: translateY(-10%); }
}

.micromodal-slide {
  display: none;
}

.micromodal-slide.is-open {
  display: block;
}

.micromodal-slide[aria-hidden="false"] .modal__overlay {
  animation: mmfadeIn .3s cubic-bezier(0.0, 0.0, 0.2, 1);
}

.micromodal-slide[aria-hidden="false"] .modal__container {
  animation: mmslideIn .3s cubic-bezier(0, 0, .2, 1);
}

.micromodal-slide[aria-hidden="true"] .modal__overlay {
  animation: mmfadeOut .3s cubic-bezier(0.0, 0.0, 0.2, 1);
}

.micromodal-slide[aria-hidden="true"] .modal__container {
  animation: mmslideOut .3s cubic-bezier(0, 0, .2, 1);
}

.micromodal-slide .modal__container,
.micromodal-slide .modal__overlay {
  will-change: transform;
}



@include blokkiPaddingRules;
@include blokkiMarginRules;
@include blokkiVisibilityRules;